//--------------------------------------------------
//	Sizes
//--------------------------------------------------

$pageWidth:				1024px;



//--------------------------------------------------
//	Colors
//--------------------------------------------------

$colorBase:				#333333;  // Base color
$colorHighlight:		#a2ad00;  // Highlight color



//--------------------------------------------------
//	Fonts
//--------------------------------------------------

$fontSize:				13px;
$fontBody:				sans-serif;
$fontHeadings:			serif;



//--------------------------------------------------
//	Custom Mixins
//--------------------------------------------------

@mixin clearfix {
	&:before,
	&:after { 
		content: "";
		display: table;
	}

	&:after { clear: both; }

	& { zoom: 1; }
}


@mixin visuallyhidden {
	width: 1px;
	height: 1px;
	position: absolute;
	border: 0;
	clip: rect(0 0 0 0);
	margin: -1px;
	overflow: hidden;
	padding: 0;
}


@mixin size($width, $height:$width) {
	width: $width;
	height: $height;
}


@mixin ir($width, $height:$width, $isInline:false, $direction:left) {
	@if $width != null {
		@include size($width, $height);
	}
	background-repeat: no-repeat;
	direction: ltr;
	@if $isInline == true {
		@include float($direction);
	} @else {
		display: block;
	}
	overflow: hidden;
	text-align: left;
	text-indent: -999em;

	& br { display: none; }
}


@mixin hidden {
	display: none !important;
	visibility: hidden;
}


@mixin unlistify {
	list-style: none;
	margin: 0;
	padding: 0;
}


@mixin inlinelist($itemFloatDirection:left, $floatContainer:false, $floatContainerDirection:left) {
	@if $floatContainer == true
	{
		@include float($floatContainerDirection);
	} @else {
		@include clearfix;
	}
	@include unlistify;

	li {
		@include float($itemFloatDirection);
	}
}


$position-default-top:			null !default;
$position-default-right:		null !default;
$position-default-bottom:		null !default;
$position-default-left:			null !default;

@mixin _position($type,
                 $top: $position-default-top,
                 $right: $position-default-right,
                 $bottom: $position-default-bottom,
                 $left: $position-default-left) {
  
  $allowed_types: 'absolute' 'relative' 'fixed';

  @if not index($allowed_types, $type) {
    @warn "Unknow position: #{$type}.";
  }

  position: $type;
  @each $data in top $top, right $right, bottom $bottom, left $left {    #{nth($data, 1)}: nth($data, 2);
  }
}

@mixin absolute($top: $position-default-top,
				$right: $position-default-right,
                $bottom: $position-default-bottom,
                $left: $position-default-left) {
  @include _position(absolute, $top, $right, $bottom, $left);
}

@mixin relative($top: $position-default-top,
				$right: $position-default-right,
                $bottom: $position-default-bottom,
                $left: $position-default-left) {
  @include _position(relative, $top, $right, $bottom, $left);
}

@mixin fixed($top: $position-default-top,
			 $right: $position-default-right,
			 $bottom: $position-default-bottom,
			 $left: $position-default-left) {
  @include _position(fixed, $top, $right, $bottom, $left);
}